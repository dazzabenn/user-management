swagger: "2.0"
info:
  version: "0.0.1"
  title: User Management API
  description: This is a sample user management API.
# during dev, should point to your local machine
# host: 127.0.0.1:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /user:
    x-swagger-router-controller: user
    get:
      operationId: getAll
      description: Returns a list of users to the caller
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserListResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      operationId: save
      description: Adds a new user to the list
      parameters:
        - name: user
          description: User properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/GetUserResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/{id}:
    x-swagger-router-controller: user
    get:
      operationId: get
      description: Get a user
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserResponse"
        "204":
          description: User not found
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      operationId: update
      description: Update a user
      parameters:
        - name: id
          description: The id of the user to update
          type: string
          in: path
          required: true
        - name: user
          description: User properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserResponse"
        "204":
          description: User not found
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: deleteUser
      description: Delete a user
      parameters:
        - name: id
          description: The id of the user to delete
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        "204":
          description: User not found
        "500":
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
definitions:
  GetUserListResponse:
    required:
      - users
    properties:
      users:
        type: array
        items:
          $ref: '#/definitions/GetUserResponse'
  GetUserResponse:
    required:
      - id
      - email
      - forename
      - surname
      - created
    properties:
      id:
        type: string
        minLength: 40
        maxLength: 40
        description: The unique id of the user
      email: 
        type: string
        format: email
        maxLength: 255
        description: The user's e-mail
      forename:
        type: string
        minLength: 1
        maxLength: 255
        description: The user's forename
      surname:
        type: string
        minLength: 1
        maxLength: 255
        description: The user's surname
      created:
        type: string
        format: date-time
        description: The date and time the user was added
      updated:
        type: string
        format: date-time
        description: The date and time the user was updated
    example:
      id: "5a61d9c369ff1adf201446f6032498618a86ab16"
      email: test@test.com
      forename: Test
      surname: User
      created: "2016-12-21T19:48:15.879Z"
  User:
    type: object
    properties:
      email:
        type: string
        format: email
        maxLength: 255
        description: The user's email address
      forename:
        type: string
        minLength: 1
        maxLength: 255
        description: The user's forename
      surname:
        type: string
        minLength: 1
        maxLength: 255
        description: The user's surname
    required:
      - email
      - forename
      - surname
    example:
      email: test@test.com
      forename: Test
      surname: User
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
    example:
      message: "Sorry, an error has occurred!"
  GeneralResponse:
    type: object
    properties:
      success:
        type: number
        description: Returns 1 if successful
      description:
        type: string
        description: A short comment
    required:
      - success
      - description
    example:
      success: 1
      description: "Your action was successful"
